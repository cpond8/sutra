# Parser Tests - Basic Syntax
# Tests for fundamental parsing of Sutra syntax

- name: "parse number integer"
  input: "42"
  expected: "42"

- name: "parse number float"
  input: "3.14"
  expected: "3.14"

- name: "parse number negative"
  input: "-42"
  expected: "-42"

- name: "parse boolean true"
  input: "true"
  expected: "true"

- name: "parse boolean false"
  input: "false"
  expected: "false"

- name: "parse nil"
  input: "nil"
  expected: "nil"

- name: "parse string simple"
  input: '"hello"'
  expected: '"hello"'

- name: "parse string with spaces"
  input: '"hello world"'
  expected: '"hello world"'

- name: "parse string with escape sequences"
  input: '"hello\\nworld\\t!"'
  expected: '"hello\\nworld\\t!"'

- name: "parse symbol simple"
  input: "(print foo)"
  expected: "nil"

- name: "parse symbol with special chars"
  input: "(print foo-bar?)"
  expected: "nil"

- name: "parse empty list"
  input: "()"
  expected: "()"

- name: "parse simple list"
  input: "(list 1 2 3)"
  expected: "(1 2 3)"

- name: "parse nested list"
  input: "(list 1 (list 2 3) 4)"
  expected: "(1 (2 3) 4)"

- name: "parse quote"
  input: "'(1 2 3)"
  expected: "(1 2 3)"

- name: "parse path notation"
  input: "(get player.hp)"
  expected: "nil"

# Comment handling
- name: "parse with line comment"
  input: "; this is a comment\\n42"
  expected: "42"

- name: "parse with inline comment"
  input: "42 ; this is a comment"
  expected: "42"

# Error cases
- name: "parse error unmatched paren"
  input: "(list 1 2"
  expect_error_code: "PARSE_ERROR"

- name: "parse error extra paren"
  input: "(list 1 2))"
  expect_error_code: "PARSE_ERROR"

- name: "parse error invalid string"
  input: '"unclosed string'
  expect_error_code: "PARSE_ERROR"
