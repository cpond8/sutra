;; Comprehensive Define Tests

(test "define: function definition and call"
  (expect (value 7))
  (do
    (define (add x y) (+ x y))
    (add 3 4)))

(test "define: variable definition and use"
  (expect (value 42))
  (do
    (define answer 42)
    answer))

(test "define: function that returns lambda"
  (expect (value 12))
  (do
    (define (make-adder n)
      (lambda (x)
        (+ x n)))
    (define add5 (make-adder 5))
    (add5 7)))

(test "define: nested function definitions"
  (expect (value 8))
  (do
    (define (outer x)
      (define (inner y)
        (+ x y))
      (inner 3))
    (outer 5)))

(test "define: variadic function"
  (expect (value 10))
  (do
    (define (sum x y ...rest)
      (+ x y (car rest)))
    (sum 1 2 7)))

(test "define: function with no parameters"
  (expect (value 42))
  (do
    (define (get-answer) 42)
    (get-answer)))

(test "define: function with rest parameters only"
  (expect (value 6))
  (do
    (define (sum-all ...args)
      (if (null? args)
          0
          (+ (car args) (apply sum-all (cdr args)))))
    (sum-all 1 2 3)))